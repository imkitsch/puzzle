# This workflow will build a golang project
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-go

name: Go

on:
  push:
    tags:
      - "*"

jobs:
  build:
    name: Build
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os:
          - ubuntu-latest
          - macos-latest
    steps:
      - name: Set up Go
        uses: actions/setup-go@v3
        with:
          go-version: 1.19
        id: go

      - name: Set up libpcap-dev
        if: matrix.os == 'ubuntu-latest'
        run: sudo apt-get install libpcap-dev gcc -y

      - name: Get version
        id: get_version
        run: echo ::set-output name=VERSION::${GITHUB_REF/refs\/tags\//}

      - name: Check out code into the Go module directory
        uses: actions/checkout@v3

      - name: Get dependencies
        run: go mod download

      - name: Build On Linux
        run: |
          go build  -ldflags "-s -w" -o ./puzzle ./cmd/puzzle/
          chmod +x puzzle
          tar -cvf puzzle-${{ steps.get_version.outputs.VERSION }}-linux.tar puzzle config/
        if: matrix.os == 'ubuntu-latest'
        env:
          GOENABLE: 1

      - name: Build On Darwin
        run: |
          go build -ldflags "-s -w" -o ./puzzle ./cmd/puzzle/
          chmod +x puzzle
          tar -cvf puzzle-${{ steps.get_version.outputs.VERSION }}-linux.tar puzzle config/
        if: matrix.os == 'macos-latest'

      - name: Build On Windows
        run : |
          go build -ldflags "-s -w" -o ./puzzle.exe ./cmd/puzzle/
          tar -cvf puzzle-windows.tar puzzle.exe config/
        if: matrix.os == 'ubuntu-latest'
        env:
          GOOS: windows
          GOENABLE: 1

      - name: Release
        uses: softprops/action-gh-release@master
        with:
          # note you'll typically need to create a personal access token
          # with permissions to create releases in the other repo
          files: puzzle-*
          fail_on_unmatched_files: true
          token: ${{ secrets.TOKEN }}
          append_body: true
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
